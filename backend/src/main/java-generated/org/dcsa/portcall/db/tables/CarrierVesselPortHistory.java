/*
 * This file is generated by jOOQ.
 */
package org.dcsa.portcall.db.tables;


import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.dcsa.portcall.db.Keys;
import org.dcsa.portcall.db.Public;
import org.dcsa.portcall.db.tables.records.CarrierVesselPortHistoryRecord;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CarrierVesselPortHistory extends TableImpl<CarrierVesselPortHistoryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.carrier_vessel_port_history</code>
     */
    public static final CarrierVesselPortHistory CARRIER_VESSEL_PORT_HISTORY = new CarrierVesselPortHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CarrierVesselPortHistoryRecord> getRecordType() {
        return CarrierVesselPortHistoryRecord.class;
    }

    /**
     * The column <code>public.carrier_vessel_port_history.id</code>.
     */
    public final TableField<CarrierVesselPortHistoryRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.carrier_vessel_port_history.vessel</code>.
     */
    public final TableField<CarrierVesselPortHistoryRecord, Integer> VESSEL = createField(DSL.name("vessel"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.carrier_vessel_port_history.port_of_call</code>.
     */
    public final TableField<CarrierVesselPortHistoryRecord, Integer> PORT_OF_CALL = createField(DSL.name("port_of_call"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.carrier_vessel_port_history.port_previous</code>.
     */
    public final TableField<CarrierVesselPortHistoryRecord, Integer> PORT_PREVIOUS = createField(DSL.name("port_previous"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.carrier_vessel_port_history.port_next</code>.
     */
    public final TableField<CarrierVesselPortHistoryRecord, Integer> PORT_NEXT = createField(DSL.name("port_next"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.carrier_vessel_port_history.terminal</code>.
     */
    public final TableField<CarrierVesselPortHistoryRecord, Integer> TERMINAL = createField(DSL.name("terminal"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.carrier_vessel_port_history.carrier</code>.
     */
    public final TableField<CarrierVesselPortHistoryRecord, Integer> CARRIER = createField(DSL.name("carrier"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.carrier_vessel_port_history.last_update</code>.
     */
    public final TableField<CarrierVesselPortHistoryRecord, LocalDateTime> LAST_UPDATE = createField(DSL.name("last_update"), SQLDataType.LOCALDATETIME(6).nullable(false).defaultValue(DSL.field("now()", SQLDataType.LOCALDATETIME)), this, "");

    private CarrierVesselPortHistory(Name alias, Table<CarrierVesselPortHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private CarrierVesselPortHistory(Name alias, Table<CarrierVesselPortHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.carrier_vessel_port_history</code> table reference
     */
    public CarrierVesselPortHistory(String alias) {
        this(DSL.name(alias), CARRIER_VESSEL_PORT_HISTORY);
    }

    /**
     * Create an aliased <code>public.carrier_vessel_port_history</code> table reference
     */
    public CarrierVesselPortHistory(Name alias) {
        this(alias, CARRIER_VESSEL_PORT_HISTORY);
    }

    /**
     * Create a <code>public.carrier_vessel_port_history</code> table reference
     */
    public CarrierVesselPortHistory() {
        this(DSL.name("carrier_vessel_port_history"), null);
    }

    public <O extends Record> CarrierVesselPortHistory(Table<O> child, ForeignKey<O, CarrierVesselPortHistoryRecord> key) {
        super(child, key, CARRIER_VESSEL_PORT_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Identity<CarrierVesselPortHistoryRecord, Integer> getIdentity() {
        return (Identity<CarrierVesselPortHistoryRecord, Integer>) super.getIdentity();
    }

    @Override
    public List<ForeignKey<CarrierVesselPortHistoryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CarrierVesselPortHistoryRecord, ?>>asList(Keys.CARRIER_VESSEL_PORT_HISTORY__VESSEL_HISTORY_FK, Keys.CARRIER_VESSEL_PORT_HISTORY__PORT_CALL_HISTORY_FK, Keys.CARRIER_VESSEL_PORT_HISTORY__PORT_PREV_HISTORY_FK, Keys.CARRIER_VESSEL_PORT_HISTORY__PORT_NEXT_HISTORY_FK, Keys.CARRIER_VESSEL_PORT_HISTORY__TERMINAL_HISTORY_FK, Keys.CARRIER_VESSEL_PORT_HISTORY__CARRIER_HISTORY_FK);
    }

    public Vessel vessel() {
        return new Vessel(this, Keys.CARRIER_VESSEL_PORT_HISTORY__VESSEL_HISTORY_FK);
    }

    public Port portCallHistoryFk() {
        return new Port(this, Keys.CARRIER_VESSEL_PORT_HISTORY__PORT_CALL_HISTORY_FK);
    }

    public Port portPrevHistoryFk() {
        return new Port(this, Keys.CARRIER_VESSEL_PORT_HISTORY__PORT_PREV_HISTORY_FK);
    }

    public Port portNextHistoryFk() {
        return new Port(this, Keys.CARRIER_VESSEL_PORT_HISTORY__PORT_NEXT_HISTORY_FK);
    }

    public Terminal terminal() {
        return new Terminal(this, Keys.CARRIER_VESSEL_PORT_HISTORY__TERMINAL_HISTORY_FK);
    }

    public Carrier carrier() {
        return new Carrier(this, Keys.CARRIER_VESSEL_PORT_HISTORY__CARRIER_HISTORY_FK);
    }

    @Override
    public CarrierVesselPortHistory as(String alias) {
        return new CarrierVesselPortHistory(DSL.name(alias), this);
    }

    @Override
    public CarrierVesselPortHistory as(Name alias) {
        return new CarrierVesselPortHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CarrierVesselPortHistory rename(String name) {
        return new CarrierVesselPortHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CarrierVesselPortHistory rename(Name name) {
        return new CarrierVesselPortHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, Integer, Integer, Integer, Integer, Integer, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
