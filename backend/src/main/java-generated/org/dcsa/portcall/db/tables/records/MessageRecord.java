/*
 * This file is generated by jOOQ.
 */
package org.dcsa.portcall.db.tables.records;


import org.dcsa.portcall.db.enums.MessageDirection;
import org.dcsa.portcall.db.tables.Message;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageRecord extends UpdatableRecordImpl<MessageRecord> implements Record8<Integer, MessageDirection, Integer, String, byte[], String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.message.id</code>.
     */
    public MessageRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.message.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.message.direction</code>.
     */
    public MessageRecord setDirection(MessageDirection value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.message.direction</code>.
     */
    public MessageDirection getDirection() {
        return (MessageDirection) get(1);
    }

    /**
     * Setter for <code>public.message.timestamp_id</code>.
     */
    public MessageRecord setTimestampId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.message.timestamp_id</code>.
     */
    public Integer getTimestampId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.message.filename</code>.
     */
    public MessageRecord setFilename(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.message.filename</code>.
     */
    public String getFilename() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.message.payload</code>.
     */
    public MessageRecord setPayload(byte[] value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.message.payload</code>.
     */
    public byte[] getPayload() {
        return (byte[]) get(4);
    }

    /**
     * Setter for <code>public.message.transfer_id</code>.
     */
    public MessageRecord setTransferId(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.message.transfer_id</code>.
     */
    public String getTransferId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.message.status</code>.
     */
    public MessageRecord setStatus(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.message.status</code>.
     */
    public String getStatus() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.message.detail</code>.
     */
    public MessageRecord setDetail(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.message.detail</code>.
     */
    public String getDetail() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, MessageDirection, Integer, String, byte[], String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, MessageDirection, Integer, String, byte[], String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Message.MESSAGE.ID;
    }

    @Override
    public Field<MessageDirection> field2() {
        return Message.MESSAGE.DIRECTION;
    }

    @Override
    public Field<Integer> field3() {
        return Message.MESSAGE.TIMESTAMP_ID;
    }

    @Override
    public Field<String> field4() {
        return Message.MESSAGE.FILENAME;
    }

    @Override
    public Field<byte[]> field5() {
        return Message.MESSAGE.PAYLOAD;
    }

    @Override
    public Field<String> field6() {
        return Message.MESSAGE.TRANSFER_ID;
    }

    @Override
    public Field<String> field7() {
        return Message.MESSAGE.STATUS;
    }

    @Override
    public Field<String> field8() {
        return Message.MESSAGE.DETAIL;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public MessageDirection component2() {
        return getDirection();
    }

    @Override
    public Integer component3() {
        return getTimestampId();
    }

    @Override
    public String component4() {
        return getFilename();
    }

    @Override
    public byte[] component5() {
        return getPayload();
    }

    @Override
    public String component6() {
        return getTransferId();
    }

    @Override
    public String component7() {
        return getStatus();
    }

    @Override
    public String component8() {
        return getDetail();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public MessageDirection value2() {
        return getDirection();
    }

    @Override
    public Integer value3() {
        return getTimestampId();
    }

    @Override
    public String value4() {
        return getFilename();
    }

    @Override
    public byte[] value5() {
        return getPayload();
    }

    @Override
    public String value6() {
        return getTransferId();
    }

    @Override
    public String value7() {
        return getStatus();
    }

    @Override
    public String value8() {
        return getDetail();
    }

    @Override
    public MessageRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MessageRecord value2(MessageDirection value) {
        setDirection(value);
        return this;
    }

    @Override
    public MessageRecord value3(Integer value) {
        setTimestampId(value);
        return this;
    }

    @Override
    public MessageRecord value4(String value) {
        setFilename(value);
        return this;
    }

    @Override
    public MessageRecord value5(byte[] value) {
        setPayload(value);
        return this;
    }

    @Override
    public MessageRecord value6(String value) {
        setTransferId(value);
        return this;
    }

    @Override
    public MessageRecord value7(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public MessageRecord value8(String value) {
        setDetail(value);
        return this;
    }

    @Override
    public MessageRecord values(Integer value1, MessageDirection value2, Integer value3, String value4, byte[] value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageRecord
     */
    public MessageRecord() {
        super(Message.MESSAGE);
    }

    /**
     * Create a detached, initialised MessageRecord
     */
    public MessageRecord(Integer id, MessageDirection direction, Integer timestampId, String filename, byte[] payload, String transferId, String status, String detail) {
        super(Message.MESSAGE);

        setId(id);
        setDirection(direction);
        setTimestampId(timestampId);
        setFilename(filename);
        setPayload(payload);
        setTransferId(transferId);
        setStatus(status);
        setDetail(detail);
    }
}
