/*
 * This file is generated by jOOQ.
 */
package org.dcsa.portcall.db.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;

import org.dcsa.portcall.db.enums.Direction;
import org.dcsa.portcall.db.enums.PortCallTimestampType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PortCallTimestamp implements Serializable {

    private static final long serialVersionUID = 312895952;

    private Integer               id;
    private Integer               vessel;
    private Integer               portOfCall;
    private Integer               portPrevious;
    private Integer               portNext;
    private PortCallTimestampType timestampType;
    private OffsetDateTime        eventTimestamp;
    private OffsetDateTime        logOfTimestamp;
    private Direction             direction;
    private Integer               terminal;
    private String                locationId;
    private String                changeComment;
    private Boolean               deleted;

    public PortCallTimestamp() {}

    public PortCallTimestamp(PortCallTimestamp value) {
        this.id = value.id;
        this.vessel = value.vessel;
        this.portOfCall = value.portOfCall;
        this.portPrevious = value.portPrevious;
        this.portNext = value.portNext;
        this.timestampType = value.timestampType;
        this.eventTimestamp = value.eventTimestamp;
        this.logOfTimestamp = value.logOfTimestamp;
        this.direction = value.direction;
        this.terminal = value.terminal;
        this.locationId = value.locationId;
        this.changeComment = value.changeComment;
        this.deleted = value.deleted;
    }

    public PortCallTimestamp(
        Integer               id,
        Integer               vessel,
        Integer               portOfCall,
        Integer               portPrevious,
        Integer               portNext,
        PortCallTimestampType timestampType,
        OffsetDateTime        eventTimestamp,
        OffsetDateTime        logOfTimestamp,
        Direction             direction,
        Integer               terminal,
        String                locationId,
        String                changeComment,
        Boolean               deleted
    ) {
        this.id = id;
        this.vessel = vessel;
        this.portOfCall = portOfCall;
        this.portPrevious = portPrevious;
        this.portNext = portNext;
        this.timestampType = timestampType;
        this.eventTimestamp = eventTimestamp;
        this.logOfTimestamp = logOfTimestamp;
        this.direction = direction;
        this.terminal = terminal;
        this.locationId = locationId;
        this.changeComment = changeComment;
        this.deleted = deleted;
    }

    public Integer getId() {
        return this.id;
    }

    public PortCallTimestamp setId(Integer id) {
        this.id = id;
        return this;
    }

    public Integer getVessel() {
        return this.vessel;
    }

    public PortCallTimestamp setVessel(Integer vessel) {
        this.vessel = vessel;
        return this;
    }

    public Integer getPortOfCall() {
        return this.portOfCall;
    }

    public PortCallTimestamp setPortOfCall(Integer portOfCall) {
        this.portOfCall = portOfCall;
        return this;
    }

    public Integer getPortPrevious() {
        return this.portPrevious;
    }

    public PortCallTimestamp setPortPrevious(Integer portPrevious) {
        this.portPrevious = portPrevious;
        return this;
    }

    public Integer getPortNext() {
        return this.portNext;
    }

    public PortCallTimestamp setPortNext(Integer portNext) {
        this.portNext = portNext;
        return this;
    }

    public PortCallTimestampType getTimestampType() {
        return this.timestampType;
    }

    public PortCallTimestamp setTimestampType(PortCallTimestampType timestampType) {
        this.timestampType = timestampType;
        return this;
    }

    public OffsetDateTime getEventTimestamp() {
        return this.eventTimestamp;
    }

    public PortCallTimestamp setEventTimestamp(OffsetDateTime eventTimestamp) {
        this.eventTimestamp = eventTimestamp;
        return this;
    }

    public OffsetDateTime getLogOfTimestamp() {
        return this.logOfTimestamp;
    }

    public PortCallTimestamp setLogOfTimestamp(OffsetDateTime logOfTimestamp) {
        this.logOfTimestamp = logOfTimestamp;
        return this;
    }

    public Direction getDirection() {
        return this.direction;
    }

    public PortCallTimestamp setDirection(Direction direction) {
        this.direction = direction;
        return this;
    }

    public Integer getTerminal() {
        return this.terminal;
    }

    public PortCallTimestamp setTerminal(Integer terminal) {
        this.terminal = terminal;
        return this;
    }

    public String getLocationId() {
        return this.locationId;
    }

    public PortCallTimestamp setLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }

    public String getChangeComment() {
        return this.changeComment;
    }

    public PortCallTimestamp setChangeComment(String changeComment) {
        this.changeComment = changeComment;
        return this;
    }

    public Boolean getDeleted() {
        return this.deleted;
    }

    public PortCallTimestamp setDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PortCallTimestamp (");

        sb.append(id);
        sb.append(", ").append(vessel);
        sb.append(", ").append(portOfCall);
        sb.append(", ").append(portPrevious);
        sb.append(", ").append(portNext);
        sb.append(", ").append(timestampType);
        sb.append(", ").append(eventTimestamp);
        sb.append(", ").append(logOfTimestamp);
        sb.append(", ").append(direction);
        sb.append(", ").append(terminal);
        sb.append(", ").append(locationId);
        sb.append(", ").append(changeComment);
        sb.append(", ").append(deleted);

        sb.append(")");
        return sb.toString();
    }
}
