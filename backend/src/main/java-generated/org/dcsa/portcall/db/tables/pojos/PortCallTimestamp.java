/*
 * This file is generated by jOOQ.
 */
package org.dcsa.portcall.db.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;

import org.dcsa.portcall.db.enums.Direction;
import org.dcsa.portcall.db.enums.PortCallTimestampType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PortCallTimestamp implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer               id;
    private Integer               vessel;
    private String                vesselServiceName;
    private Integer               portOfCall;
    private Integer               portPrevious;
    private Integer               portNext;
    private PortCallTimestampType timestampType;
    private Integer               callSequence;
    private OffsetDateTime        eventTimestamp;
    private OffsetDateTime        logOfTimestamp;
    private Direction             direction;
    private Integer               terminal;
    private String                locationId;
    private String                changeComment;
    private Integer               delayCode;
    private Boolean               modifiable;
    private Boolean               deleted;
    private String                processId;
    private Boolean               uiReadByUser;

    public PortCallTimestamp() {}

    public PortCallTimestamp(PortCallTimestamp value) {
        this.id = value.id;
        this.vessel = value.vessel;
        this.vesselServiceName = value.vesselServiceName;
        this.portOfCall = value.portOfCall;
        this.portPrevious = value.portPrevious;
        this.portNext = value.portNext;
        this.timestampType = value.timestampType;
        this.callSequence = value.callSequence;
        this.eventTimestamp = value.eventTimestamp;
        this.logOfTimestamp = value.logOfTimestamp;
        this.direction = value.direction;
        this.terminal = value.terminal;
        this.locationId = value.locationId;
        this.changeComment = value.changeComment;
        this.delayCode = value.delayCode;
        this.modifiable = value.modifiable;
        this.deleted = value.deleted;
        this.processId = value.processId;
        this.uiReadByUser = value.uiReadByUser;
    }

    public PortCallTimestamp(
        Integer               id,
        Integer               vessel,
        String                vesselServiceName,
        Integer               portOfCall,
        Integer               portPrevious,
        Integer               portNext,
        PortCallTimestampType timestampType,
        Integer               callSequence,
        OffsetDateTime        eventTimestamp,
        OffsetDateTime        logOfTimestamp,
        Direction             direction,
        Integer               terminal,
        String                locationId,
        String                changeComment,
        Integer               delayCode,
        Boolean               modifiable,
        Boolean               deleted,
        String                processId,
        Boolean               uiReadByUser
    ) {
        this.id = id;
        this.vessel = vessel;
        this.vesselServiceName = vesselServiceName;
        this.portOfCall = portOfCall;
        this.portPrevious = portPrevious;
        this.portNext = portNext;
        this.timestampType = timestampType;
        this.callSequence = callSequence;
        this.eventTimestamp = eventTimestamp;
        this.logOfTimestamp = logOfTimestamp;
        this.direction = direction;
        this.terminal = terminal;
        this.locationId = locationId;
        this.changeComment = changeComment;
        this.delayCode = delayCode;
        this.modifiable = modifiable;
        this.deleted = deleted;
        this.processId = processId;
        this.uiReadByUser = uiReadByUser;
    }

    /**
     * Getter for <code>public.port_call_timestamp.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.port_call_timestamp.id</code>.
     */
    public PortCallTimestamp setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.vessel</code>.
     */
    public Integer getVessel() {
        return this.vessel;
    }

    /**
     * Setter for <code>public.port_call_timestamp.vessel</code>.
     */
    public PortCallTimestamp setVessel(Integer vessel) {
        this.vessel = vessel;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.vessel_service_name</code>.
     */
    public String getVesselServiceName() {
        return this.vesselServiceName;
    }

    /**
     * Setter for <code>public.port_call_timestamp.vessel_service_name</code>.
     */
    public PortCallTimestamp setVesselServiceName(String vesselServiceName) {
        this.vesselServiceName = vesselServiceName;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.port_of_call</code>.
     */
    public Integer getPortOfCall() {
        return this.portOfCall;
    }

    /**
     * Setter for <code>public.port_call_timestamp.port_of_call</code>.
     */
    public PortCallTimestamp setPortOfCall(Integer portOfCall) {
        this.portOfCall = portOfCall;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.port_previous</code>.
     */
    public Integer getPortPrevious() {
        return this.portPrevious;
    }

    /**
     * Setter for <code>public.port_call_timestamp.port_previous</code>.
     */
    public PortCallTimestamp setPortPrevious(Integer portPrevious) {
        this.portPrevious = portPrevious;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.port_next</code>.
     */
    public Integer getPortNext() {
        return this.portNext;
    }

    /**
     * Setter for <code>public.port_call_timestamp.port_next</code>.
     */
    public PortCallTimestamp setPortNext(Integer portNext) {
        this.portNext = portNext;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.timestamp_type</code>.
     */
    public PortCallTimestampType getTimestampType() {
        return this.timestampType;
    }

    /**
     * Setter for <code>public.port_call_timestamp.timestamp_type</code>.
     */
    public PortCallTimestamp setTimestampType(PortCallTimestampType timestampType) {
        this.timestampType = timestampType;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.call_sequence</code>.
     */
    public Integer getCallSequence() {
        return this.callSequence;
    }

    /**
     * Setter for <code>public.port_call_timestamp.call_sequence</code>.
     */
    public PortCallTimestamp setCallSequence(Integer callSequence) {
        this.callSequence = callSequence;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.event_timestamp</code>.
     */
    public OffsetDateTime getEventTimestamp() {
        return this.eventTimestamp;
    }

    /**
     * Setter for <code>public.port_call_timestamp.event_timestamp</code>.
     */
    public PortCallTimestamp setEventTimestamp(OffsetDateTime eventTimestamp) {
        this.eventTimestamp = eventTimestamp;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.log_of_timestamp</code>.
     */
    public OffsetDateTime getLogOfTimestamp() {
        return this.logOfTimestamp;
    }

    /**
     * Setter for <code>public.port_call_timestamp.log_of_timestamp</code>.
     */
    public PortCallTimestamp setLogOfTimestamp(OffsetDateTime logOfTimestamp) {
        this.logOfTimestamp = logOfTimestamp;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.direction</code>.
     */
    public Direction getDirection() {
        return this.direction;
    }

    /**
     * Setter for <code>public.port_call_timestamp.direction</code>.
     */
    public PortCallTimestamp setDirection(Direction direction) {
        this.direction = direction;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.terminal</code>.
     */
    public Integer getTerminal() {
        return this.terminal;
    }

    /**
     * Setter for <code>public.port_call_timestamp.terminal</code>.
     */
    public PortCallTimestamp setTerminal(Integer terminal) {
        this.terminal = terminal;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.location_id</code>.
     */
    public String getLocationId() {
        return this.locationId;
    }

    /**
     * Setter for <code>public.port_call_timestamp.location_id</code>.
     */
    public PortCallTimestamp setLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.change_comment</code>.
     */
    public String getChangeComment() {
        return this.changeComment;
    }

    /**
     * Setter for <code>public.port_call_timestamp.change_comment</code>.
     */
    public PortCallTimestamp setChangeComment(String changeComment) {
        this.changeComment = changeComment;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.delay_code</code>.
     */
    public Integer getDelayCode() {
        return this.delayCode;
    }

    /**
     * Setter for <code>public.port_call_timestamp.delay_code</code>.
     */
    public PortCallTimestamp setDelayCode(Integer delayCode) {
        this.delayCode = delayCode;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.modifiable</code>.
     */
    public Boolean getModifiable() {
        return this.modifiable;
    }

    /**
     * Setter for <code>public.port_call_timestamp.modifiable</code>.
     */
    public PortCallTimestamp setModifiable(Boolean modifiable) {
        this.modifiable = modifiable;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.deleted</code>.
     */
    public Boolean getDeleted() {
        return this.deleted;
    }

    /**
     * Setter for <code>public.port_call_timestamp.deleted</code>.
     */
    public PortCallTimestamp setDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.process_id</code>.
     */
    public String getProcessId() {
        return this.processId;
    }

    /**
     * Setter for <code>public.port_call_timestamp.process_id</code>.
     */
    public PortCallTimestamp setProcessId(String processId) {
        this.processId = processId;
        return this;
    }

    /**
     * Getter for <code>public.port_call_timestamp.ui_read_by_user</code>.
     */
    public Boolean getUiReadByUser() {
        return this.uiReadByUser;
    }

    /**
     * Setter for <code>public.port_call_timestamp.ui_read_by_user</code>.
     */
    public PortCallTimestamp setUiReadByUser(Boolean uiReadByUser) {
        this.uiReadByUser = uiReadByUser;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PortCallTimestamp (");

        sb.append(id);
        sb.append(", ").append(vessel);
        sb.append(", ").append(vesselServiceName);
        sb.append(", ").append(portOfCall);
        sb.append(", ").append(portPrevious);
        sb.append(", ").append(portNext);
        sb.append(", ").append(timestampType);
        sb.append(", ").append(callSequence);
        sb.append(", ").append(eventTimestamp);
        sb.append(", ").append(logOfTimestamp);
        sb.append(", ").append(direction);
        sb.append(", ").append(terminal);
        sb.append(", ").append(locationId);
        sb.append(", ").append(changeComment);
        sb.append(", ").append(delayCode);
        sb.append(", ").append(modifiable);
        sb.append(", ").append(deleted);
        sb.append(", ").append(processId);
        sb.append(", ").append(uiReadByUser);

        sb.append(")");
        return sb.toString();
    }
}
